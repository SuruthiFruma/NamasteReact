Explained how to create tags in HTML and in Vanilla JS using appendChild() methods
    //CODE
        const heading=document.createElement("h1")
        heading.innerHTML="Namaste React"
        const root=document.getElementById("root")
        root.appendChild(heading)

Explained about creating elements in React using createElement() method
   
createElement() takes up three argument 
--> The name of the tag
--> An object to define attributes
--> The child of the tag

 //SYNTAX 
React.createElement("div",{id :"parent},Hello World)
React.createElement() returns an object

Explained how to create React Root and Render it

ReactDOM.createRoot() will create the root of the react app
render() method renders the root to the DOM

--->If there are multiple tags with the defined root attribute, only the first root follows React , The second one will be a simple HTML tag
--->If the root already has some child tags in them, it will be replaced in the DOM , after React is encountered and the React App will be displayed
--->The React Root can have other simple HTML tags above or below them

Explained how to create a child tag using createElement()
 
 Since the third argument of createElement() takes the child , a new element must be defined there

 //SYNTAX
 React.createElement("div",{id : "parent"},React.createElement("div",{id :"child"},"Im child tag"))

 Explained how to create a siblings for a  tag using createElement()
 
 To define siblings for a tag, the third argument of the createElement()  must be given as an array of siblings

 //SYNTAX
 React.createElement("div",{id :"parent"},[React.createElement("h1",{id:"child1"},"Im first sibling"), React.createElement("h1",{id:"child2"},"Im second sibling")])

 This is where JSX comes into picture as the structure to create sibling gets harder

